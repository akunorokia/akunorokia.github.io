<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Akunorokia on Akunorokia</title>
    <link>https://akunorokia.github.io/</link>
    <description>Recent content in Akunorokia on Akunorokia</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 16 Mar 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="/" rel="self" type="application/rss+xml" />
    
    <item>
      <title>unsafe包初涉小记</title>
      <link>https://akunorokia.github.io/2019/2019-03-16-go-unsafe/</link>
      <pubDate>Sat, 16 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://akunorokia.github.io/2019/2019-03-16-go-unsafe/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;示例code:&lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&#34;language-go&#34;&gt;    var Astruct struct {
        a int
        b string
    }
    
    Astruct.a = 1
    Astruct.b = &amp;quot;1&amp;quot;
    
    s := &amp;amp;Astruct
    b := (*string)(unsafe.Pointer(uintptr(unsafe.Pointer(s)) + uintptr(unsafe.Sizeof(int(0)))))
    *b = &amp;quot;000&amp;quot;
    fmt.printf(&amp;quot;aa:%v\r\n&amp;quot;, Astruct)
&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;个人初见：&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;利用&lt;strong&gt;&lt;em&gt;unsafe&lt;/em&gt;&lt;/strong&gt;包可以通过内存中的&lt;strong&gt;公有变量&lt;/strong&gt;定位到内存地址，进而对定位推算到的&lt;strong&gt;公/私有变量值&lt;/strong&gt;进行&lt;strong&gt;&lt;em&gt;取值&lt;/em&gt;&lt;/strong&gt;和&lt;strong&gt;&lt;em&gt;赋值&lt;/em&gt;&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;像不像&lt;strong&gt;外挂&lt;/strong&gt;?&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>【转载】人人当老板，谁来做长工</title>
      <link>https://akunorokia.github.io/2019/2019-03-15-mentality-you-should-be/</link>
      <pubDate>Fri, 15 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://akunorokia.github.io/2019/2019-03-15-mentality-you-should-be/</guid>
      <description>&lt;p&gt;&lt;strong&gt;&lt;code&gt;导读：&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;以前读历史时候，利伯曼有一本书，是研究英国光荣革命之后300年的社会各阶层的变化的。&lt;/p&gt;

&lt;p&gt;他宣称，英国社会是通过将中产阶级不断贫困化来提高国家整体素质的：一次又一次，英国中产阶级通过自身努力来到了社会中间层，他们踌躇满志，对自己的能力和国家的前途充满信心，然后这种乐观情绪就像一股洪流把他们裹挟着推送到一个新的属于他们时代的泡沫中去。&lt;/p&gt;

&lt;p&gt;泡沫破灭后，他们又回到社会底层，与之伴随的就是英国底层社会的民众普遍都受过良好教育，接受主流的核心价值观，英国因而实现了国家的整体进步。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;一&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;关于中产贫困化，原理上，一个知名投机狗有过具体阐述。&lt;/p&gt;

&lt;p&gt;“任何一个国家如果承载了太多的中产所带来的高额度的期望，那么必然陷入债务危机，最终面临无法维系统治的境地。&lt;/p&gt;

&lt;p&gt;所以，打掉中产的高期望值，能降低债务规模，也能让中产没精力过多牵扯各种实际社会成本无法承担的诉求，从而降低期望值，至于如何打掉？&lt;/p&gt;

&lt;p&gt;让中产贫困化是一个很现实的办法，虽然这不符合绝大部分的人的认知。&amp;rdquo;&lt;/p&gt;

&lt;p&gt;事实上，任何一个社会发展到最后必然遇到一个无法解决的难题，就是中产阶级越来越庞大以后对物质需求的不断提升和对自由的无边际追求。&lt;/p&gt;

&lt;p&gt;全球都没办法承载一个庞大的中产群体，因为社会资源是有限的，全部对物质需求越来越高，怎么可能支撑得了呢？&lt;/p&gt;

&lt;p&gt;同样的，社会管理也是有成本的，自由也必然是有限度的，不可能没有边际的延伸，一旦碰到瓶颈无法突破，矛盾就会被激发。&lt;/p&gt;

&lt;p&gt;所以你才看到，进入现代社会，每个国家的政府都有个要紧事儿，就是不能让他的人民有钱，不仅要让他们没钱，还得让他们欠一屁股债，无非就是主动还是被动问题，渐进式还是断崖式的问题。&lt;/p&gt;

&lt;p&gt;不然大家积累了财富就不好好干活，只有欠一屁股债，人民群众才有危机感，才会踏踏实实的干活。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;二&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;美国是一个典型的例子，在全球的国民收入最高，基本上人民群众欠银行的钱，这辈子都还不上。&lt;/p&gt;

&lt;p&gt;而且美国人对利出一孔的弱民政策在民众中执行的比我们更到位，其最强大的就是稽税部门和警察，左税右税反垄断，警察和税务稽查分分钟教你做人。&lt;/p&gt;

&lt;p&gt;不过这玩意起源不在欧美，毛主席说：“劝君少骂秦始皇，百代犹行秦法政”，这话是没错的。在秦朝，商君书的驭民五术中，《弱民篇》就有过详细阐述：&lt;/p&gt;

&lt;p&gt;民贫则力富，力富则淫，淫则有虱。故民富而不用，则使民以食出，各必有力，则农不偷。农不偷，六虱无萌，故国富而贫治，重强。&lt;/p&gt;

&lt;p&gt;这句话啥意思呢，是说民众贫困的话，就会努力地去致富，但是当他们富裕了之后，又会染上各种骄奢淫逸的坏毛病，也就是“虱”了。&lt;/p&gt;

&lt;p&gt;而且民众如果富裕了，就很难说服他们继续努力为国家劳动做贡献，那我们就需要想办法，让他们心甘情愿把粮食交出来，替代服役，就肯继续劳动了，这样农业就不会荒废了。&lt;/p&gt;

&lt;p&gt;农事不荒废，人们不停止他们奋斗向上的脚步，所谓骄奢淫逸混吃等死就不会出现了。&lt;/p&gt;

&lt;p&gt;国富而贫治就是这么个套路，使民众永远保持一颗劳动进取的心，国家哪有不强盛的呢？&lt;/p&gt;

&lt;p&gt;换到现在道理也一样，你要是手里有个百八十万，每天下班撸个串，喝个酒，对大多数人来说，哪还有啥进取心，要是想办法让你在一线城市买套小房子，贷三十年贷款，睁眼每个月就欠银行两万，是不是充满了危机感啊，你能不努力嘛。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;三&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;资本家和政府联合起来，总有办法让你欠更多的钱，以前我们国家主要是房贷，后面消费主义盛行以后，车贷，信用卡，蚂蚁花呗都在快速增长。&lt;/p&gt;

&lt;p&gt;在美国，花样就更多了，学生贷款，信用卡，车贷，房贷甚至还给穷人专门发行了次级贷，上次金融危机就是因为次贷搞出来的，其中，增长最快的是学生贷款。&lt;/p&gt;

&lt;p&gt;就连不太富裕的美国前总统奥巴马想还清学贷也没那么容易，满打满算花了21年时间呢。&lt;/p&gt;

&lt;p&gt;到这里你应该隐约明白了点，为什么中产返贫一定会出现。只不过很多国家其实采取的是政府主导的渐进式方式，手法相对隐蔽温和。&lt;/p&gt;

&lt;p&gt;所有发达国家都是一个不断消灭和培养中产的过程，每次当把中产阶级都搞得没钱了，就又可以开始积极发展，给你新的动力积极向上。&lt;/p&gt;

&lt;p&gt;回顾这些年，每一次泡沫兴起，媒体都会推波助澜，结果基本都是中产买单，拿我们国家近两年来说，典型的事件就有万众创业，匹凸匹，比特币，无一例外的两年内都破灭了，单单一个泛亚就430个亿，背后22万个中产家庭因此返贫。&lt;/p&gt;

&lt;p&gt;消灭中产有四个手段，一是加税，二是通货膨胀，三是给你机会，让你觉得哪里都有钱赚，结果直接掉坑里。四是金融危机，历史上每次危机受伤最重的都是中产。&lt;/p&gt;

&lt;p&gt;加税不能加太狠，加的太狠，富人都先跑了，财政支出不能减，就只能找中产去要，最近法国为啥有穿黄马甲的刁民上街闹事呢，就是因为加税富人跑了，中产税更重了，只好上街了。&lt;/p&gt;

&lt;p&gt;通胀年年都会有，可通胀太厉害成津巴布韦了，典型的例子是一战前的魏玛共和国，我们解放前的金圆券。&lt;/p&gt;

&lt;p&gt;在我们这样一个人民勤劳，积极向上的国家，最好用的是第三种，毕竟加税骂声一片，通胀威胁政权，金融危机更可怕，后果不可预知。&lt;/p&gt;

&lt;p&gt;中华民族致富欲望无比的强，第三种不但好用，即使你从中产滑落，那么你也只能怪自己水平差，经验不足，毕竟有人成功了。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;四&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;人这种动物，惰性很强，天主教讲，人有七宗罪，傲慢、妒忌、暴怒、懒惰、贪婪、饕餮，淫欲。&lt;/p&gt;

&lt;p&gt;虽然不信教，但是这个描述一点没错，这才是真正的人性。从国家的角度，想让人干活，这些人就不能有钱，有钱了谁愿意搬砖开矿干苦力，大家都想舒舒服服的获得资本收入。&lt;/p&gt;

&lt;p&gt;比如收个房租喝个小酒，投个公司分分红旅旅游，但是对于整个社会来说，这种分工是不可能的，都想做地主，谁来做长工啊。&lt;/p&gt;

&lt;p&gt;所以必须要想法让多数人维持在温饱线这个层面，经济上不太富裕，需要努力朝九晚五工作才能满足生活需要，这样社会才能维持正常的运转。&lt;/p&gt;

&lt;p&gt;不过为什么政府要联合资本家收割呢，道理很简单啊，就业和创造财富的需要。&lt;/p&gt;

&lt;p&gt;多数老百姓其实是没动力做什么改变世界，做出一番事业的宏伟梦想的，改善生活，富裕起来是工作的仅存动力，并不能带来就业创造社会财富。&lt;/p&gt;

&lt;p&gt;唯一能出卖的是时间，你的时间单位价值再高，一天也只能做24小时，况且没谁能连轴转，多数行业收入很快就会到天花板，多数人到了35岁左右，增长就很有限了（别举什么特例，这里说的是普通人）。&lt;/p&gt;

&lt;p&gt;要是人人都知道自己很快到了天花板没有希望，谁还努力找机会啊，所以还需要给你足够的动力刺激。&lt;/p&gt;

&lt;p&gt;拿被宰的最厉害的中产来说，首先要让他们有改善欲望，小孩子要上好学校，医疗条件要改善，想住好房子，自媒体公众号再渲染点各种中产焦虑，努力奋斗财务自由的故事。&lt;/p&gt;

&lt;p&gt;甚至凤凰男屌丝女勾心斗角最后都会切入到，你必须努力奋斗脱离lowB群体避免阶级固化，才能赢得更好的未来，这些每天充斥脑海的信息，除了刷流量，也在潜移默化的推动观念形成。&lt;/p&gt;

&lt;p&gt;典型的还有消费主义洗脑，不管自己和家里经济状况如何，先透支未来的钱买了再说已经深入人心。&lt;/p&gt;

&lt;p&gt;舆论先跟上，在媒体反复的教育下，这批有素质的中产自然动力十足，观念的形成基本就是个顺水推舟的事儿，有了改善欲望就好说了，政府和资本家收割起来那就容易多了，人都有从众心理，大家都万众创业了，你还能不上？&lt;/p&gt;

&lt;p&gt;大家都买买买了，你不买对得起自己？别人的娃都送去补习了，你能不去？要是贵州山区的农民，给他讲什么财务自由阶级固化，他大概会把你当SB吧。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;五&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;对资本家来说呢，早就脱离了赚钱改善生活这个低级趣味的范畴，盘算的是怎么做成事儿，对做成事儿有特别的成就感。&lt;/p&gt;

&lt;p&gt;虽然都是对挣钱特别有兴趣，但是资本家和老百姓挣钱的目的却是不一样，挣钱是结果。&lt;/p&gt;

&lt;p&gt;但是目的是扩大事业版图再投资，搞基建搞工厂扩大生产，增加雇员，享乐性消费占全部收入的比重少之又少，普通老百姓么，挣钱也就是过日子，攒钱防老，教育医疗。&lt;/p&gt;

&lt;p&gt;有个段子很有意思，中产是政府最烦的一个群体，除了能干点活，整天骂国家骂资本家，觉得自己赚的少。&lt;/p&gt;

&lt;p&gt;没啥大本事，创业搏一把不敢，还喜欢要这要那的，还贪，低价股票房子不敢买，拉高了就冲上去买，买完房跌了拉横幅要求退房骂政府，涨了就觉得自己眼光准能力强，动不动以人民名义自居。&lt;/p&gt;

&lt;p&gt;在政府的角度，不就是一群白眼狼嘛，不宰你宰谁。虽然是段子，但话糙理不糙，道理完全没错。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;六&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;我从来都觉得，国内经济前景很好，未来一片光明，因为毕竟这是全世界为数不多产业链完善，负债结构相对合理，基础设施完善，依然还在增长的国家。只要不攀比，肯卖力，生活总会有起色，10年内我们也会成世界第一经济体，这都是数据可以看到的。&lt;/p&gt;

&lt;p&gt;但普通人的负担越来越重也是看得到的，经济的增长，服务的改善，整个产业结构的提升，都需要吃瓜群众拿钱去换。&lt;/p&gt;

&lt;p&gt;尤其是中产的转移支付，这是一个暗黑的游戏，被时代裹挟的普通人并没办法拒绝参与，游戏从一开始就是资本家和政府联合打造，这并不是新鲜事儿，所以别奇怪，这是多数中产的宿命。&lt;/p&gt;

&lt;p&gt;我们的老师，欧洲和美国几乎是一样的轨迹，只不过我们开始这个游戏比别人晚了一点，从千禧年才刚刚开始这个历史过程，游戏只玩了不到20年，很多人还不习惯。&lt;/p&gt;

&lt;p&gt;抬头看天，低头看路，中产的问题在于，只知道往前走，努力奋斗却看不清方向，每次都跳到别人设定好的轨迹里。&lt;/p&gt;

&lt;p&gt;记得1942里讲，只要活着到了陕西，给我十年，我还是地主。很多人对这句话嗤之以鼻，近代以前的地主，就是现代社会的互联网，金融大佬和基层官员，他们懂技巧，也知道方向。&lt;/p&gt;

&lt;p&gt;面对和斗大的字不识一箩筐的农民的竞争，这些地主出生的人即使倾家荡产，只要积累得当，攒够买下第一块土地的钱，依然可以重新开始他们的滚雪球游戏！&lt;/p&gt;

&lt;p&gt;这不就是王者开个小号打青铜嘛，除了原始积累困难点，其他方面难度并没有想象的大。&lt;/p&gt;

&lt;p&gt;看清方向，读懂政策，看明白媒体怎么给傻乎乎的吃瓜群众洗脑让他享受被压榨的过程，有点脑子的吃瓜群众又怎么借政策东风，略微改善被裹挟的命运，尽可能活的轻松点，在全世界任何国家，都是一生的必修课。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://akunorokia.github.io/about/</link>
      <pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://akunorokia.github.io/about/</guid>
      <description>&lt;p&gt;&lt;center&gt;欢迎来到Akunor的 &lt;strong&gt;鱼豆腐雪饼猫舍&lt;/strong&gt; .这是基于Hugo搭建的个人博客站.&lt;/center&gt;
&lt;img src=&#34;https://akunorokia.github.io/images/me/motto.png&#34; alt=&#34;avatar&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;center&gt;了解更多&lt;a href=&#34;https://github.com/akunorokia&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;GitHub&lt;/a&gt;.&lt;/center&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>如何在github.io搭建Hugo博客站</title>
      <link>https://akunorokia.github.io/2019/2019-03-14-first-manual/</link>
      <pubDate>Thu, 14 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://akunorokia.github.io/2019/2019-03-14-first-manual/</guid>
      <description>

&lt;h1 id=&#34;摘要&#34;&gt;摘要&lt;/h1&gt;

&lt;p&gt;在&lt;a href=&#34;Jekyll blog&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;前面的博文&lt;/a&gt;中介绍了如何在&lt;code&gt;github.io&lt;/code&gt;上搭建自己的博客站，基于的是&lt;a href=&#34;https://jekyllrb.com/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Jekyll&lt;/a&gt;，这也是github中比较常用的方式，好处是github可以自动调用&lt;code&gt;Jekyll&lt;/code&gt;来帮你及时生成、更新你的博客站。本来一切还是挺美好的，随着使用的深入，博主发现有几点实在是不能忍：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;github上面的&lt;code&gt;Jekyll&lt;/code&gt;版本实在太低了，对于code block渲染问题严重。最受不了的一点就是很多种类型的code在里面被显示成一行&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Jekyll&lt;/code&gt;对文章的文件名有着严格的定义，且不能够放到不同的目录，这个在博文比较多的时候极为不便&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;博主平时喜欢关注各种新技术，较早的时候就曾关注过一个的博客建站的工具&lt;code&gt;Hugo&lt;/code&gt;，用Go语言（博主的最爱之一）写的，当时就觉得挺不错。经过这几年的发展已经非常成熟，Github上面的Stars截止本文已经24250了。在经过一段时间的&lt;code&gt;Jekyll&lt;/code&gt;的折磨之后，终于乘着最近稍微闲了一点，将&lt;code&gt;Jekyll&lt;/code&gt;彻底换成了&lt;code&gt;Hugo&lt;/code&gt;。本文就简单介绍一下，如何在github.io上部署你的&lt;code&gt;Hugo&lt;/code&gt;博客站。&lt;/p&gt;

&lt;h1 id=&#34;准备工作&#34;&gt;准备工作&lt;/h1&gt;

&lt;p&gt;跟基于&lt;code&gt;Jekyll&lt;/code&gt;一样，如果需要在github.io上部署的话，必须在github上创建你自己的&lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;的repo，详细过程请参见&lt;a href=&#34;Jekyll blog&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;前面的博文&lt;/a&gt;。&lt;/p&gt;

&lt;h1 id=&#34;搭建-hugo-博客站&#34;&gt;搭建&lt;code&gt;Hugo&lt;/code&gt;博客站&lt;/h1&gt;

&lt;h2 id=&#34;安装-hugo&#34;&gt;安装&lt;code&gt;Hugo&lt;/code&gt;&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Hugo&lt;/code&gt;的安装非常简单，在MAC上执行：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;brew install hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其它安装方式，可以参见&lt;a href=&#34;https://gohugo.io/getting-started/installing/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;官网教程&lt;/a&gt;。&lt;/p&gt;

&lt;h2 id=&#34;创建你的博客站&#34;&gt;创建你的博客站&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在github上面创建博客文章的repo&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Hugo&lt;/code&gt;的建站部署方式跟&lt;code&gt;Jekyll&lt;/code&gt;不同，github会自动的识别&lt;code&gt;Jekyll&lt;/code&gt;并调用&lt;code&gt;Jekyll&lt;/code&gt;工具帮你自动生成、更新博客站，所以我们只需要直接在自己的&lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;中编写文章并上传即可。但是github并不能直接识别&lt;code&gt;Hugo&lt;/code&gt;的内容，因此，这个博客站的生成、更新的工作得由你自己完成，&lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;只是用来托管你生成后的静态网站的内容（github支持托管静态网站，请参见&lt;a href=&#34;https://help.github.com/articles/user-organization-and-project-pages/#user--organization-pages&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;这里&lt;/a&gt;)，因此，你还需要另一个git repo来真正的编辑、保存、管理你的博文。为此，博主创建了一个名为&lt;a href=&#34;https://github.com/keysaim/blogs&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;blogs&lt;/a&gt;的repo，以下说到博文管理repo指的就是这个repo。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;用&lt;code&gt;Hugo&lt;/code&gt;建站&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;初始化博客站&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;hugo new site blogs
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;git init&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd blogs
git init
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;指定github源&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git remote add origin git@github.com:keysaim/blogs.git
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这样，你本地的初始化的&lt;code&gt;Hugo&lt;/code&gt;博客站已经准备好了。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;添加一个主题&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Hugo&lt;/code&gt;官方有非常多的免费开源的主题，&lt;a href=&#34;https://themes.gohugo.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;猛击这里&lt;/a&gt;。博主选用的是国人开发的一款主题&lt;a href=&#34;https://themes.gohugo.io/hugo-theme-jane/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;Jane&lt;/a&gt;。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git submodule add -b master https://github.com/xianmin/hugo-theme-jane.git themes/jane
cp -r themes/jane/exampleSite/content ./
cp themes/jane/exampleSite/config.toml ./
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;本地测试&lt;/p&gt;

&lt;p&gt;在部署之前，先本地测试一下：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;hugo server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然后本地浏览器打开&lt;a href=&#34;http://localhost:1313&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;http://localhost:1313&lt;/a&gt;，没有意外的话你将看到类似这样的：&lt;/p&gt;

&lt;div style=&#34;text-align:center&#34;&gt;
    &lt;img src=&#34;https://d33wubrfki0l68.cloudfront.net/9a581e943c0732d9c9852138ff0ad94f10b710a8/b6bf8/hugo-theme-jane/hugo-theme-jane/screenshot-hugo-theme-jane_huda38615ea8fd917fd31d36ba7a275d34_226834_1500x1000_fill_catmullrom_top_2.png&#34; alt=&#34;&#34; width=&#34;100%&#34;/&gt;
&lt;/div&gt;

&lt;p&gt;这是&lt;code&gt;Jane&lt;/code&gt;主题默认提供的样式跟内容，说明你的本地&lt;code&gt;Hugo&lt;/code&gt;站可以正常工作了。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;修改默认的配置&#34;&gt;修改默认的配置&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;Hugo&lt;/code&gt;的默认配置文件是&lt;code&gt;config.toml&lt;/code&gt;，这里还是&lt;code&gt;Jane&lt;/code&gt;提供的默认配置，需要修改为你自己的信息，比如名字等，很多配置显而易见，这里不详述，只是着重指出几个有点困难或者比较重要的配置：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;修改&lt;code&gt;baseURL&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;baseURL&lt;/code&gt;是你博客最终部署的网站的url，基于github.io的话就应该是这样的&lt;a href=&#34;https://keysaim.github.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://keysaim.github.io/&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;启用gitment&lt;/p&gt;

&lt;p&gt;关于gitment的详细教程，请参见&lt;a href=&#34;https://keysaim.github.io/post/2017-08-16-how-to-add-comments/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;这篇博文&lt;/a&gt;，按照教程准备好github的几个token之后，只需要修改&lt;code&gt;Hugo&lt;/code&gt;配置中的这几行：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;[params.gitment]          # Gitment is a comment system based on GitHub issues. see https://github.com/imsun/gitment
    owner = &amp;quot;keysaim&amp;quot;              # Your GitHub ID
    repo = &amp;quot;comments&amp;quot;               # The repo to store comments
    clientId = &amp;quot;xxxx&amp;quot;           # Your client ID
    clientSecret = &amp;quot;xxxx&amp;quot;       # Your client secret
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其中，repo就是教程中所说的github上面为保存comments而创建的repo，clientId跟clientSecret就是你自己创建的oauth授权信息。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;修改页面博文数量显示&lt;/p&gt;

&lt;p&gt;有几个参数会影响页面博文数的显示：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;paginate = 15               # 首页每页显示的文章数
archive-paginate = 50       # 归档、标签、分类每页显示的文章数目
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;修改语言&lt;/p&gt;

&lt;p&gt;如果你需要将博客站显示成中文，那么请这么修改：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-toml&#34;&gt;defaultContentLanguage = &amp;quot;zh-cn&amp;quot;
[Languages.zh-cn]
  languageCode = &amp;quot;zh-cn&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;编辑博文&#34;&gt;编辑博文&lt;/h2&gt;

&lt;p&gt;默认情况下，&lt;code&gt;Jane&lt;/code&gt;主题将博文放在&lt;code&gt;content/post/&lt;/code&gt;下面，你需要在这下面编辑你的博文。&lt;code&gt;Hugo&lt;/code&gt;是支持分目录的，这点非常好，比如博主可以这么分：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-console&#34;&gt;$ ll
total 4
drwxr-xr-x 3 nbaoping staff  102 Mar 21 16:22 arch
drwxr-xr-x 6 nbaoping staff  204 Mar 22 10:50 blog
drwxr-xr-x 5 nbaoping staff  170 Mar 22 10:33 docker
drwxr-xr-x 4 nbaoping staff  136 Mar 21 16:21 git
drwxr-xr-x 9 nbaoping staff  306 Mar 21 16:20 linux
drwxr-xr-x 3 nbaoping staff  102 Mar 21 16:22 note
drwxr-xr-x 3 nbaoping staff  102 Mar 21 16:24 others
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;还有一点非常不错的就是&lt;code&gt;Hugo&lt;/code&gt;可以识别出&lt;code&gt;Jekyll&lt;/code&gt;的博文，包括里面的标题，时间跟标签等信息。这样博主非常方便的将之前的&lt;code&gt;Jekyll&lt;/code&gt;的所有博文直接迁移过来了，而无需做什么修改。当然，如果你新写博文的话，在博文的头部可以这样编写：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-yaml&#34;&gt;---
date: 2018-03-22
title: &amp;quot;如何在github.io搭建Hugo博客&amp;quot;
tags:
    - 教程
    - github
categories:
    - github
comment: true
---
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;编写完成之后，本地查看一下你的博文，没有问题的话先提交到你的博文管理的repo：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git add xxxx
git commit -m &amp;quot;YOUR COMMIT MESSAGE&amp;quot;
git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;部署博客站&#34;&gt;部署博客站&lt;/h2&gt;

&lt;p&gt;这一步很关键了，咱们需要将自己的&lt;code&gt;Hugo&lt;/code&gt;博文站部署到github.io。&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;添加你的github.io&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;git submodule add -b master git@github.com:keysaim/keysaim.github.io.git public
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这里将其作为submodule添加进来，且放到&lt;code&gt;public&lt;/code&gt;目录下面，&lt;code&gt;public&lt;/code&gt;目录是&lt;code&gt;Hugo&lt;/code&gt;生成静态文件的地方，这样的话咱们就可以把生成出来的静态文件直接上传到你的&lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;的repo里面了&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;生成静态博客站&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;hugo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;直接运行&lt;code&gt;hugo&lt;/code&gt;命令，就会在&lt;code&gt;public&lt;/code&gt;目录下生成静态博客站。&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;提交&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;cd public
git add .
git commit -m &amp;quot;YOUR COMMIT MESSAGE&amp;quot;
git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;查看你的github.io博客站&lt;/p&gt;

&lt;p&gt;正常情况下，过一会你就可以看到你基于&lt;code&gt;Hugo&lt;/code&gt;的github.io博客站了，博主的是&lt;a href=&#34;https://keysaim.github.io/&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;https://keysaim.github.io/&lt;/a&gt;。&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;自动部署脚本&#34;&gt;自动部署脚本&lt;/h2&gt;

&lt;p&gt;为了方便，&lt;code&gt;Hugo&lt;/code&gt;提供了一个&lt;a href=&#34;https://gohugo.io/hosting-and-deployment/hosting-on-github/#put-it-into-a-script&#34; rel=&#34;nofollow noreferrer&#34; target=&#34;_blank&#34;&gt;自动部署的脚本&lt;/a&gt;，这里博主稍微修改了一点点用来同时提交这两个repo：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;#!/bin/bash

if [ $# -lt  1 ]; then
    echo &amp;quot;$0 &amp;lt;commit message&amp;gt;&amp;quot;
    exit 1
fi

msg=&amp;quot;$1&amp;quot;
git commit -m &amp;quot;$msg&amp;quot;
if [ $? -ne 0 ]; then
    echo &amp;quot;Commit failed&amp;quot;
    exit 1
fi
git push origin master
if [ $? -ne 0 ]; then
    echo &amp;quot;Push failed&amp;quot;
fi

echo -e &amp;quot;\033[0;32mDeploying updates to GitHub...\033[0m&amp;quot;

# Build the project.
hugo # if using a theme, replace with `hugo -t &amp;lt;YOURTHEME&amp;gt;`

# Go To Public folder
cd public
# Add changes to git.
git add .

# Commit changes.
git commit -m &amp;quot;$msg&amp;quot;

# Push source and build repos.
git push origin master

# Come Back up to the Project Root
cd ..
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至此，恭喜你已经完成了你的&lt;code&gt;Hugo&lt;/code&gt;博客站了。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>